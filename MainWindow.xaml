<Window x:Class="MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:TKSISchedule" 
    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    Title="TKSI Schedule v15.4.23" MinHeight="550" MinWidth="400" MaxWidth="600" 
    SizeToContent="WidthAndHeight"  DataContext="{Binding}" Background="{StaticResource myblue}">
    <Window.Resources>
        <local:WidthConverter x:Key="widthconvert"/>
        
        <Style TargetType="Button">
            <Setter Property="Height" Value="28"/>
        </Style>

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border  Name="Border" Margin="0,0,-4,0" Background="{StaticResource LightBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}" 
            BorderThickness="1,1,1,1" 
            CornerRadius="2,12,0,0" >
                                <ContentPresenter x:Name="ContentSite"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              ContentSource="Header"
              Margin="12,2,12,2"
              RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>        
    </Window.Resources>
    <StackPanel Orientation="Vertical">
        <Label Name="lblNetworkTextFailed" Content="NETWORK TEST FAILED" Visibility="{Binding NetworkConnection,Converter={local:BooleanToVisibilityConverter},FallbackValue=Collapsed}"  Background="Yellow" VerticalAlignment="Bottom" Grid.ColumnSpan="2" />

        <TabControl FontSize="14"  Background="Transparent">

            <TabItem  Header="Job Locations" Padding="4">
                <Grid Margin="10" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="280"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                   
                  <Grid FlowDirection="LeftToRight"  HorizontalAlignment="Stretch"  Grid.Row="0" VerticalAlignment="Top" Margin="0" Width="500" >
                     
                      <Label Content="Type Address or Job Code" Background="LightYellow" DockPanel.Dock="Left" VerticalAlignment="Top" Height="30"  Width="240" HorizontalAlignment="Left" Margin="0,0,0,0" />

                        <TextBox DockPanel.Dock="Bottom" HorizontalAlignment="Left" VerticalAlignment="Top" Name="txtJobSearch"  Width="240" Text="{Binding searchstring,UpdateSourceTrigger=PropertyChanged}" Margin="0,34,0,0"/>
                      
                        <Button Command="{Binding cmdaddaddress}" VerticalAlignment="Top" Height="24" Content="Add Address" Background="LightYellow" Width="200" Margin="300,34,0,-3" />

                        <Button Command="{Binding cmdJobFromQuote}" VerticalAlignment="Top" Height="24" Content="Add Job From Quote" Background="LightGreen" Width="200" Margin="300,0,0,0" />

                    </Grid>

                    <ListView HorizontalContentAlignment="Stretch"  FontSize="16" Name="lbJobSearch" SelectedItem="{Binding selectedjob}" MinHeight="260" Grid.Row="0" ItemsSource="{Binding listjobsextra}"  VerticalAlignment="Stretch" Margin="0,65,0,0" >

                        <ListView.ItemTemplate>

                            <DataTemplate>

                                <StackPanel Orientation="Horizontal" Background="Transparent"  HorizontalAlignment="Stretch" MinWidth="400" >
                                    <!-- background must be transparent to get the clicks to work -->
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger  EventName="MouseLeftButtonDown">
                                            <cmd:EventToCommand Command="{Binding Path=cmdjob, Mode=OneWay}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Label Width="10"/>
                                    <Label MinWidth="60" Background="{Binding field1, Converter={local:ValueToBrushConverter}}" Content="{Binding field1}"/>

                                    <Label x:Name="tb2"  Background="{Binding field1,Converter={local:ValueToBrushConverter}}"  Content="{Binding field2}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.Resources>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </ListView.Resources>
                    </ListView>

                    <StackPanel Grid.Row="1" Visibility="{Binding AdminAsstVisibility,Converter={local:BooleanToVisibilityConverter}}">
                        <Label Margin="0,9,0,2" Content="SWO Requests" Background="LightYellow" Width="280" HorizontalAlignment="Left"/>
                        <ListView  MinHeight="120" ItemsSource="{Binding ApprovedSWOlist}" MaxHeight="160">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Background="{Binding sStatus,Converter={local:SWOStatusToBrushConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
                                                <cmd:EventToCommand Command="{Binding  RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.cmdswo,  Mode=OneWay}"  PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                        <TextBlock MinWidth="120" Text="{Binding sStatus}"/>
                                        <TextBlock MinWidth="80" Text="{Binding tAddress.sLocCode}" TextDecorations="Underline" />
                                        <TextBlock MinWidth="120" Text="{Binding tCustomr.sName}"/>
                                        <TextBlock MinWidth="120" Text="{Binding dateOrderBy,StringFormat=d}"/>
                                        <TextBlock MinWidth="160" Text="{Binding detail1,Converter={local:RtfToTextConverter}}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>

                    <StackPanel Grid.Row="2" >
                        <Label Margin="0,9,0,2" Width="220" HorizontalAlignment="Left" Background="LightYellow">
                            <Label.Content>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding nickname}" Margin="0,0,20,0"/>
                                    <TextBlock Text="Jobs Needing Attention" />
                                </StackPanel>
                            </Label.Content>
                        </Label>
                        <ListView  MaxHeight="200"  MinHeight="120" ItemsSource="{Binding SalesNeedsAttentionList}" >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
                                                <cmd:EventToCommand Command="{Binding  RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.cmdjobrouted,  Mode=OneWay}"  PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                        <TextBlock MinWidth="120" Margin="0,0,20,0" Text="Waiting on Salesperson"/>
                                        <TextBlock MinWidth="80" Text="{Binding sJobNo}" TextDecorations="Underline" />
                                        <TextBlock MinWidth="120" Text="{Binding tCustomr.sName}"/>

                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                  
                </Grid>
            </TabItem>

            <TabItem Header="Customers" Name="tabCust" Padding="4" Height="28" VerticalAlignment="Bottom" >

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MaxHeight="32" />
                        <RowDefinition Height="Auto" MaxHeight="32" />
                        <RowDefinition Height="90*" MaxHeight="700" />
                        <RowDefinition Height="10*" />
                    </Grid.RowDefinitions>
                    <!--<DockPanel LastChildFill="True">-->
                    <Label  Content="Type Customer Name" Margin="0,0,0,6"  Width="300" Grid.Row="0" HorizontalAlignment="Left" />
                    <TextBox  MinWidth="300" MaxHeight="30" HorizontalAlignment="Left"  Grid.Row="1"  Name="txtCustSearch" Margin="0,0,0,4" Text="{Binding searchstringcust,UpdateSourceTrigger=PropertyChanged}"/>

                    <ListBox Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"  ScrollViewer.CanContentScroll="True"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" AlternationCount="2"  Grid.Row="2" SelectedItem="{Binding selectedcust}" Name="listBoxCust" ItemsSource="{Binding listcustomers}" MinHeight="400">
                        <ListBox.Resources>
                            <Style  TargetType="{x:Type ListBoxItem}">
                                <Style.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                        <Setter Property="Background" Value="AliceBlue"></Setter>
                                    </Trigger>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter Property="Background" Value="#FFFFFF"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Edit..." Command="{Binding cmdcustedit}" />
                            </ContextMenu>
                        </ListBox.ContextMenu>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick" SourceName="listBoxCust">

                                <i:InvokeCommandAction Command="{Binding CustDoubleClick}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding sName}" Margin="4,0">
                           
                                        </TextBlock>
                                    </StackPanel>
                                </Border>

                            </DataTemplate>
                        </ListBox.ItemTemplate>

                    </ListBox>

                </Grid>

            </TabItem>

            <TabItem Header="Sales" Name="tabSales">
                <TabItem.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="30"/>
                    </Style>
                </TabItem.Resources>
                <StackPanel Orientation="Vertical" Margin="20">
                    <Button x:Name="btninstallerbook"  Foreground="Green" Margin="0,10" Command="{Binding cmdinstallerbook}" Content="Installer Book" Width="200"/>
                    <Button   Foreground="Black" Margin="0,0,0,10" Command="{Binding cmdsalestotals}" Content="Sales Totals" Width="200"/>
                </StackPanel>
            </TabItem>
            <TabItem Visibility="Collapsed" Header="Shipping" Name="tabShipping" Padding="4">
                <TabItem.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="30"/>
                    </Style>
                </TabItem.Resources>
                <StackPanel Orientation="Vertical" Margin="20">
                    <GroupBox Header="Reports" MinWidth="200">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                            <Button  Margin="0,10"  Command="{Binding cmdmanageshipping}" Content="Scheduling"  Width="200" />
                            <Button   Margin="0,10"    Command="{Binding cmdbinsandwarehouse}" Content="Bins and Warehouse"  Width="200" />
                            <Button   Margin="0,10"    Command="{Binding cmdabelsetc}" Content="Labels, etc."  Width="200" />
                            <Button   Margin="0,10"    Command="{Binding cmdbackorder}" Content="Backorders"  Width="200" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Crestwood" Foreground="Green">
                        <StackPanel Orientation="Vertical">
                            <Button x:Name="btnShipping"  Foreground="Green" Margin="0,10" Command="{Binding cmdshipping}" Content="Shipping" Width="200"/>
                            <Button x:Name="btnRec"  Foreground="Green" Margin="0,10" Command="{Binding cmdreceiving}" Content="Receiving" Width="200"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Kitchen Craft" Foreground="Red">
                        <StackPanel Orientation="Vertical">
                            <Button x:Name="btnShippingKC" Foreground="Red" Margin="0,10" Command="{Binding cmdkcshipping}"  Content="Shipping" Width="200"/>
                            <Button x:Name="btnReceivingKC" Foreground="Red" Margin="0,10" Command="{Binding cmdkcreceiving}"  Content="Receiving" Width="200"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>

            <TabItem Header="Administration" Name="tabAdmin">
                <StackPanel Orientation="Vertical" Margin="20">

                    <Button   Foreground="Blue" Margin="0,0,0,10" Command="{Binding cmdsupplierreport}" Content="Supplier Report" Width="200"/>
                    <Button   Foreground="Black" Margin="0,0,0,10" Command="{Binding cmdcurrentaccounts}" Content="Current Accounts" Width="200"/>
                    <Button   Foreground="Black" Margin="0,0,0,10" Command="{Binding cmdbackorder}" Content="Backorders" Width="200"/>
                    <Button   Foreground="Black" Margin="0,0,0,10" Command="{Binding cmdinvoicealert2wkletter}" Content="Invoice Alert (2wk letter)" Width="200"/>
                    <Button   Foreground="Black" Margin="0,0,0,10" Command="{Binding cmduninvoiced}" Content="Un-Invoiced Jobs" Width="200"/>
                    <Button   Foreground="Black" Margin="0,0,0,10" Command="{Binding cmdaddcustomer}" Content="Add Customer" Width="200"/>

                    <Button   Foreground="Black" Margin="0,0,0,10" Command="{Binding cmdaddvendor}" Content="Add Vendor" Width="200"/>


                </StackPanel>
            </TabItem>

            <TabItem  Header="Accounting" Name="tabAccounting">
                <TabItem.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="30"/>
                    </Style>
                </TabItem.Resources>
                <StackPanel Orientation="Vertical" Margin="20">
                    <Button x:Name="btncashRec"  Margin="0,0,0,10" Command="{Binding cmdcashreceipts}" Content="Cash Receipts and Sales" Width="200"/>
                    <Button  Margin="0,0,0,10" Foreground="DarkGreen" Command="{Binding cmddepositreport}" Content="Deposits" Width="200"/>
                    <Button  Margin="0,0,0,10" Command="{Binding cmddepositsheet}" Content="Create Deposit Sheet" Width="200"/>
                    <Button  Margin="0,0,0,10" Command="{Binding cmdsuppliersbyweek}" Content="Suppliers by week (to Sage)" Width="200"/>
                    <Button  Margin="0,0,0,10" Command="{Binding cmdsuppliersflex}" Content="Supplier Flex (to Sage)" Width="200"/>
                    <Button  Margin="0,0,0,10" Command="{Binding cmdARAPsheet}" Content="AR / AP Sheet" Width="200"/>
                    <Button  Margin="0,0,0,10" Command="{Binding cmdtaxtableedit}" Content="Tax Table Edit" Width="200"/>
                    <Button  Margin="0,0,0,10" Command="{Binding cmdwarehousereport}" Content="Warehouse Report" Width="200"/>

                    <Button   Foreground="Black"  Command="{Binding cmdcreditlimits}" Content="Credit Limits" Width="200" Margin="0,20,0,10" />
                </StackPanel>
            </TabItem>

            <TabItem Visibility="Collapsed" Header="Payroll" Name="tabPayroll">
                <TabItem.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="30"/>
                    </Style>
                </TabItem.Resources>
                <StackPanel Orientation="Vertical" Margin="20">
                    <Button x:Name="btnCommissions" Margin="0,0,0,20" Visibility="Collapsed" Command="{Binding cmdcommissions}" Content="Commissions" Width="200"/>

                    <Button   Foreground="Black"  Command="{Binding cmdprogramfixes}" Content="Program Fixes" Width="200" Margin="0,20,0,10" />
                </StackPanel>
            </TabItem>


        </TabControl>
    </StackPanel>
 
</Window>
